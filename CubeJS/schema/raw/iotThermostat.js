cube(`raw_iot_Thermostat`, {
    sql: `select
    a.id,
    device_id,
    thermostat_mode,
    room_temperature,
    offset_temperature,
    scheduling,
    relative_humidity,
    performance_metrics,
    firmware_version,
    location_id,
    system_voltage,
    battery_voltage,
    fan_mode,
    display_units,
    configuration_bit_field,
    status_report_temperature_change,
    status_report_interval_minutes,
    fan_run_time_per_event,
    fan_run_time_per_hour,
    schedule_mode,
    access_mode,
    apartment_community_id as iot_id
    ,cool_setpoint_temperature,
    heat_setpoint_temperature,
    download_burst_timeout,
    download_request_timeout,
    download_max_request_timeout,
    upload_max_backoff,
    upload_max_burst_attempts,
    upload_timeout,
    supervisory_control_override,
    resident_defined_name,
    local_control,
    temperature_hysteresis_cool,
    temperature_hysteresis_heat,
    sec_since_last_reboot,
    log_id,
    status_report_limit_change_report_to_interval,
    status_report_send_report_on_event,
    status_report_commands_included_in_report,
    relay_position,
    upload_port,
    associated_lock_serial_number,
    time_zone_offset_minutes,
    dst_offset_minutes,
    utc_minute_of_year_apply_dst_offset_start,
    utc_minute_of_year_apply_dst_offset_stop,
    status_report_send_report_on_power_event,
    measured_temperature,
    cool_post_cycle_delay,
    cool_min_cycle_duration,
    cool_fan_start_delay,
    cool_fan_stop_delay,
    heat_post_cycle_delay,
    heat_min_cycle_duration,
    heat_fan_start_delay,
    heat_fan_stop_delay,
    min_cool_setpoint,
    max_cool_setpoint,
    min_heat_setpoint,
    max_heat_setpoint,
    system_error_status,
    system_error_failure_state,
    temporary_mode_duration_hours,
    temporary_mode_expired_at,
    temporary_cool_setpoint_temperature,
    temporary_heat_setpoint_temperature,
    temporary_thermostat_mode,
    temporary_fan_mode,
    temporary_min_runtime_per_hour_minutes,
    c.device_communication_status,
    main_battery_state,
    system_voltage_state,
    schedule_sync_status,
    relay_health,
    relay_config_retry_count,
    relay_config_wait_service_intervals,
    relay_config_get_health_on_switch,
    company_id as apartment_community_id
    from thermostat a
    left join ${raw_iot_Apartment_Community.sql()} b on a.apartment_community_id = b.iot_id
    left join ${raw_iot_device.sql()} c on a.id = c.id`,
    
    dataSource: `postgres_iot`
  });